/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package digitaltwins.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Error definition.
 */
public class Error {
    /**
     * Service specific error code which serves as the substatus for the HTTP
     * error code.
     */
    @JsonProperty(value = "code", access = JsonProperty.Access.WRITE_ONLY)
    private String code;

    /**
     * A human-readable representation of the error.
     */
    @JsonProperty(value = "message", access = JsonProperty.Access.WRITE_ONLY)
    private String message;

    /**
     * Internal error details.
     */
    @JsonProperty(value = "details", access = JsonProperty.Access.WRITE_ONLY)
    private List<Error> details;

    /**
     * An object containing more specific information than the current object
     * about the error.
     */
    @JsonProperty(value = "innererror")
    private InnerError innererror;

    /**
     * Get service specific error code which serves as the substatus for the HTTP error code.
     *
     * @return the code value
     */
    public String code() {
        return this.code;
    }

    /**
     * Get a human-readable representation of the error.
     *
     * @return the message value
     */
    public String message() {
        return this.message;
    }

    /**
     * Get internal error details.
     *
     * @return the details value
     */
    public List<Error> details() {
        return this.details;
    }

    /**
     * Get an object containing more specific information than the current object about the error.
     *
     * @return the innererror value
     */
    public InnerError innererror() {
        return this.innererror;
    }

    /**
     * Set an object containing more specific information than the current object about the error.
     *
     * @param innererror the innererror value to set
     * @return the Error object itself.
     */
    public Error withInnererror(InnerError innererror) {
        this.innererror = innererror;
        return this;
    }

}
