/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.digitaltwins.core.models;

import java.util.Map;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A model definition and metadata for that model.
 */
public class ModelData {
    /**
     * A language map that contains the localized display names as specified in
     * the model definition.
     */
    @JsonProperty(value = "displayName")
    private Map<String, String> displayName;

    /**
     * A language map that contains the localized descriptions as specified in
     * the model definition.
     */
    @JsonProperty(value = "description")
    private Map<String, String> description;

    /**
     * The id of the model as specified in the model definition.
     */
    @JsonProperty(value = "id", required = true)
    private String id;

    /**
     * The time the model was uploaded to the service.
     */
    @JsonProperty(value = "uploadTime")
    private DateTime uploadTime;

    /**
     * Indicates if the model is decommissioned. Decommissioned models cannot
     * be referenced by newly created digital twins.
     */
    @JsonProperty(value = "decommissioned")
    private Boolean decommissioned;

    /**
     * The model definition.
     */
    @JsonProperty(value = "model")
    private Object model;

    /**
     * Get a language map that contains the localized display names as specified in the model definition.
     *
     * @return the displayName value
     */
    public Map<String, String> displayName() {
        return this.displayName;
    }

    /**
     * Set a language map that contains the localized display names as specified in the model definition.
     *
     * @param displayName the displayName value to set
     * @return the ModelData object itself.
     */
    public ModelData withDisplayName(Map<String, String> displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get a language map that contains the localized descriptions as specified in the model definition.
     *
     * @return the description value
     */
    public Map<String, String> description() {
        return this.description;
    }

    /**
     * Set a language map that contains the localized descriptions as specified in the model definition.
     *
     * @param description the description value to set
     * @return the ModelData object itself.
     */
    public ModelData withDescription(Map<String, String> description) {
        this.description = description;
        return this;
    }

    /**
     * Get the id of the model as specified in the model definition.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id of the model as specified in the model definition.
     *
     * @param id the id value to set
     * @return the ModelData object itself.
     */
    public ModelData withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the time the model was uploaded to the service.
     *
     * @return the uploadTime value
     */
    public DateTime uploadTime() {
        return this.uploadTime;
    }

    /**
     * Set the time the model was uploaded to the service.
     *
     * @param uploadTime the uploadTime value to set
     * @return the ModelData object itself.
     */
    public ModelData withUploadTime(DateTime uploadTime) {
        this.uploadTime = uploadTime;
        return this;
    }

    /**
     * Get indicates if the model is decommissioned. Decommissioned models cannot be referenced by newly created digital twins.
     *
     * @return the decommissioned value
     */
    public Boolean decommissioned() {
        return this.decommissioned;
    }

    /**
     * Set indicates if the model is decommissioned. Decommissioned models cannot be referenced by newly created digital twins.
     *
     * @param decommissioned the decommissioned value to set
     * @return the ModelData object itself.
     */
    public ModelData withDecommissioned(Boolean decommissioned) {
        this.decommissioned = decommissioned;
        return this;
    }

    /**
     * Get the model definition.
     *
     * @return the model value
     */
    public Object model() {
        return this.model;
    }

    /**
     * Set the model definition.
     *
     * @param model the model value to set
     * @return the ModelData object itself.
     */
    public ModelData withModel(Object model) {
        this.model = model;
        return this;
    }

}
