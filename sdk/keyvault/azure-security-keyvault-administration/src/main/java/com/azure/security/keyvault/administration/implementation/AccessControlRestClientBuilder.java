// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.security.keyvault.administration.implementation;

import com.azure.core.annotation.ServiceClientBuilder;
import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.CookiePolicy;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;

/**
 * A builder for creating a new instance of the AccessControlRestClient type.
 */
@ServiceClientBuilder(serviceClients = AccessControlRestClientImpl.class)
public final class AccessControlRestClientBuilder {
    /*
     * Client API version.
     */
    private String apiVersion;

    /**
     * Sets Client API version.
     *
     * @param apiVersion the apiVersion value.
     * @return the AccessControlRestClientBuilder.
     */
    public AccessControlRestClientBuilder apiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /*
     * The HTTP pipeline to send requests through
     */
    private HttpPipeline pipeline;

    /**
     * Sets The HTTP pipeline to send requests through.
     *
     * @param pipeline the pipeline value.
     * @return the AccessControlRestClientBuilder.
     */
    public AccessControlRestClientBuilder pipeline(HttpPipeline pipeline) {
        this.pipeline = pipeline;
        return this;
    }

    /**
     * Builds an instance of AccessControlRestClientImpl with the provided parameters.
     *
     * @return an instance of AccessControlRestClientImpl.
     */
    public AccessControlRestClientImpl build() {
        if (pipeline == null) {
            this.pipeline = new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy()).build();
        }
        AccessControlRestClientImpl client = new AccessControlRestClientImpl(pipeline);
        if (this.apiVersion != null) {
            client.setApiVersion(this.apiVersion);
        }
        return client;
    }
}
